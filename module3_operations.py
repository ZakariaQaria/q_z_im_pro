import streamlit as st
import cv2
import numpy as np
from helpers import load_image, add_user_progress, apply_brightness_contrast

def show_module3():
    """ุนุฑุถ ุงููุญุงุถุฑุฉ ุงูุซุงูุซุฉ: ุงูุนูููุงุช ุนูู ุงูุจูุณู"""
    
    st.header("โจ ุงููุญุงุถุฑุฉ 3: ุงูุนูููุงุช ุนูู ุงูุจูุณู (Point Operations)")
    
    # ูุนูููุงุช ุงูุชูุฏู
    if st.session_state.progress.get("module3", False):
        st.success("โ ููุฏ ุฃูููุช ูุฐู ุงููุญุงุถุฑุฉ ุจุงููุนู")
    else:
        if add_user_progress("module3"):
            st.balloons()
            st.success("๐ ูุจุฑูู! ููุฏ ุฃูููุช ุงููุญุงุถุฑุฉ ุงูุซุงูุซุฉ ูุญุตูุช ุนูู 20 ููุทุฉ")
    
    # ุงููุธุฑูุฉ
    with st.expander("๐ ุงูุดุฑุญ ุงููุธุฑู", expanded=True):
        st.markdown("""
        ## ุงูุนูููุงุช ุนูู ูุณุชูู ุงูุจูุณู (Point Operations)

        ุงูุนูููุงุช ุนูู ูุณุชูู ุงูุจูุณู ูู transformations ุชูุทุจู ุนูู ูู ุจูุณู independently ุฏูู ุงูุงุนุชูุงุฏ ุนูู ุงูุฌูุฑุงู.

        ### 1. ุชุนุฏูู ุงูุณุทูุน (Brightness Adjustment)
        - **ุงููุจุฏุฃ**: ุฅุถุงูุฉ ุฃู ุทุฑุญ ูููุฉ ุซุงุจุชุฉ ูู ุฌููุน ูุญุฏุงุช ุงูุจูุณู
        - **ุงูุตูุบุฉ ุงูุฑูุงุถูุฉ**: `new_pixel = pixel + value`
        - **ุงูุชุฃุซูุฑ**: ูุฌุนู ุงูุตูุฑุฉ ุฃูุชุญ ุฃู ุฃุบูู

        ### 2. ุชุนุฏูู ุงูุชุจุงูู (Contrast Adjustment)
        - **ุงููุจุฏุฃ**: ุถุฑุจ ููู ุงูุจูุณูุงุช ุจุนุงูู ุชุถุฎูู
        - **ุงูุตูุบุฉ ุงูุฑูุงุถูุฉ**: `new_pixel = pixel * factor`
        - **ุงูุชุฃุซูุฑ**: ูุฒูุฏ ุฃู ูููู ุงููุฑูู ุจูู ุงูุฃููุงู

        ### 3. ุงูุตูุฑุฉ ุงูุณุงูุจุฉ (Image Negative)
        - **ุงููุจุฏุฃ**: ุนูุณ ููู ุงูุจูุณูุงุช
        - **ุงูุตูุบุฉ ุงูุฑูุงุถูุฉ**: `new_pixel = 255 - pixel`
        - **ุงูุชุฃุซูุฑ**: ูุญูู ุงูุตูุฑุฉ ุฅูู negative ูุซู ุงูุตูุฑ ุงูููุชูุบุฑุงููุฉ ุงููุฏููุฉ

        ### 4. ุงูุนุชุจุฉ (Thresholding)
        - **ุงููุจุฏุฃ**: ุชุญููู ุงูุตูุฑุฉ ุฅูู ุซูุงุฆูุฉ (ุฃุจูุถ ูุฃุณูุฏ) based on threshold value
        - **ุงูุตูุบุฉ**: `pixel = 255 if pixel > threshold else 0`
        - **ุงูุงุณุชุฎุฏุงู**: ูุตู objects ุนู ุงูุฎูููุฉ

        ### 5. ุงููุต (Clipping)
        - **ุงููุจุฏุฃ**: ุชุญุฏูุฏ ูุทุงู ูููู ุงูุจูุณูุงุช
        - **ุงูุตูุบุฉ**: `pixel = max(min_value, min(pixel, max_value))`
        - **ุงูุงุณุชุฎุฏุงู**: ููุน overflow ุฃู underflow

        ### 6. ุงูุชูุฏุฏ ุงูุฎุทู (Linear Stretching)
        - **ุงููุจุฏุฃ**: ุชุญุณูู ุงูุชุจุงูู by stretching intensity range
        - **ุงูุตูุบุฉ**: `new_pixel = (pixel - min) * (255/(max-min))`
        - **ุงูุงุณุชุฎุฏุงู**: ุชุญุณูู ุฌูุฏุฉ ุงูุตูุฑ ููุฎูุถุฉ ุงูุชุจุงูู

        ### 7. Gamma Correction
        - **ุงููุจุฏุฃ**: ุชุนุฏูู non-linear ููุดุฏุฉ
        - **ุงูุตูุบุฉ**: `new_pixel = 255 * (pixel/255)^gamma`
        - **ุงูุงุณุชุฎุฏุงู**: ุชุตุญูุญ ุฅุถุงุกุฉ ุงูุตูุฑ
        """)
    
    st.markdown("---")
    
    # ุงูุชุทุจูู ุงูุนููู
    st.subheader("๐ง ุงูุชุฌุฑุจุฉ ุงูุนูููุฉ: ุชุทุจูู ุงูุนูููุงุช ุนูู ุงูุจูุณู")
    
    # ุชุญููู ุงูุตูุฑุฉ
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("#### ๐ค ุชุญููู ุงูุตูุฑุฉ")
        uploaded_file = st.file_uploader("ุงุฎุชุฑ ุตูุฑุฉ", type=['jpg', 'jpeg', 'png'])
        
        if uploaded_file is not None:
            image = load_image(uploaded_file)
            if len(image.shape) == 3:
                image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
            st.image(image, caption="ุงูุตูุฑุฉ ุงูุฃุตููุฉ (ุฑูุงุฏูุฉ)", use_container_width=True)
        else:
            # ุฅูุดุงุก ุตูุฑุฉ ุงูุชุฑุงุถูุฉ
            image = create_sample_grayscale_image()
            st.image(image, caption="ุงูุตูุฑุฉ ุงูุงูุชุฑุงุถูุฉ ุงูุฑูุงุฏูุฉ", use_container_width=True)
    
    with col2:
        if image is not None:
            st.markdown("#### โ๏ธ ุงุฎุชุฑ ุงูุนูููุฉ ูุชุทุจูููุง")
            
            operation = st.selectbox(
                "ููุน ุงูุนูููุฉ:",
                ["ุงูุณุทูุน ูุงูุชุจุงูู", "ุงูุตูุฑุฉ ุงูุณุงูุจุฉ", "ุงูุนุชุจุฉ ุงูุซุงุจุชุฉ", "ุนุชุจุฉ Otsu", "Gamma Correction"]
            )
            
            if operation == "ุงูุณุทูุน ูุงูุชุจุงูู":
                brightness = st.slider("ุงูุณุทูุน", -100, 100, 0)
                contrast = st.slider("ุงูุชุจุงูู", -100, 100, 0)
                
                if st.button("๐ ุชุทุจูู ุงูุณุทูุน ูุงูุชุจุงูู"):
                    result = apply_brightness_contrast(image, brightness, contrast)
                    st.image(result, caption="ุจุนุฏ ุชุนุฏูู ุงูุณุทูุน ูุงูุชุจุงูู", use_container_width=True)
            
            elif operation == "ุงูุตูุฑุฉ ุงูุณุงูุจุฉ":
                if st.button("๐ ุชุทุจูู ุงูุตูุฑุฉ ุงูุณุงูุจุฉ"):
                    result = 255 - image
                    st.image(result, caption="ุงูุตูุฑุฉ ุงูุณุงูุจุฉ", use_container_width=True)
            
            elif operation == "ุงูุนุชุจุฉ ุงูุซุงุจุชุฉ":
                threshold = st.slider("ูููุฉ ุงูุนุชุจุฉ", 0, 255, 127)
                
                if st.button("๐ ุชุทุจูู ุงูุนุชุจุฉ"):
                    _, result = cv2.threshold(image, threshold, 255, cv2.THRESH_BINARY)
                    st.image(result, caption="ุจุนุฏ ุชุทุจูู ุงูุนุชุจุฉ", use_container_width=True)
            
            elif operation == "ุนุชุจุฉ Otsu":
                if st.button("๐ ุชุทุจูู ุนุชุจุฉ Otsu"):
                    _, result = cv2.threshold(image, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)
                    st.image(result, caption="ุจุนุฏ ุชุทุจูู ุนุชุจุฉ Otsu", use_container_width=True)
            
            elif operation == "Gamma Correction":
                gamma = st.slider("ูููุฉ Gamma", 0.1, 5.0, 1.0, 0.1)
                
                if st.button("๐ ุชุทุจูู Gamma Correction"):
                    result = apply_gamma_correction(image, gamma)
                    st.image(result, caption=f"ุจุนุฏ Gamma Correction (ฮณ={gamma})", use_container_width=True)
    
    st.markdown("---")
    
    # ูุณู ุฅุถุงูู: ููุงุฑูุฉ ุจูู ุงูุนูููุงุช
    st.subheader("๐ ููุงุฑูุฉ ุจูู ุชุฃุซูุฑ ุงูุนูููุงุช ุงููุฎุชููุฉ")
    
    if image is not None:
        col1, col2, col3 = st.columns(3)
        
        with col1:
            # ุงูุณุทูุน ุงูุนุงูู
            bright = apply_brightness_contrast(image, 50, 0)
            st.image(bright, caption="ุณุทูุน ุนุงูู (+50)", use_container_width=True)
        
        with col2:
            # ุงูุชุจุงูู ุงูุนุงูู
            contrast_high = apply_brightness_contrast(image, 0, 50)
            st.image(contrast_high, caption="ุชุจุงูู ุนุงูู (+50)", use_container_width=True)
        
        with col3:
            # ุงูุตูุฑุฉ ุงูุณุงูุจุฉ
            negative = 255 - image
            st.image(negative, caption="ุงูุตูุฑุฉ ุงูุณุงูุจุฉ", use_container_width=True)
        
        # histogram ููุตูุฑุฉ
        st.markdown("##### ๐ Histogram ููุตูุฑุฉ")
        col1, col2 = st.columns(2)
        
        with col1:
            hist_original = cv2.calcHist([image], [0], None, [256], [0, 256])
            st.bar_chart(hist_original)
            st.caption("Histogram ููุตูุฑุฉ ุงูุฃุตููุฉ")
        
        with col2:
            if 'result' in locals():
                hist_result = cv2.calcHist([result], [0], None, [256], [0, 256])
                st.bar_chart(hist_result)
                st.caption("Histogram ุจุนุฏ ุงููุนุงูุฌุฉ")
    
    # ุงุฎุชุจุงุฑ ูุตูุฑ
    st.markdown("---")
    with st.expander("๐งช ุงุฎุชุจุงุฑ ูุตูุฑ", expanded=False):
        st.subheader("ุงุฎุชุจุงุฑ ููู ุงูุนูููุงุช ุนูู ุงูุจูุณู")
        
        q1 = st.radio(
            "1. ูุง ุชุฃุซูุฑ ุฒูุงุฏุฉ ุงูุณุทูุน ุนูู ุงูุตูุฑุฉ?",
            ["ุชุฒูุฏ ุงูุชุจุงูู", "ุชุฌุนู ุงูุตูุฑุฉ ุฃูุชุญ", "ุชุนูุณ ุงูุฃููุงู", "ุชููู ุงูุถูุถุงุก"]
        )
        
        q2 = st.radio(
            "2. ูุง ูู ุงูุตูุบุฉ ุงูุฑูุงุถูุฉ ููุตูุฑุฉ ุงูุณุงูุจุฉ?",
            ["pixel * 2", "255 - pixel", "pixel + 100", "pixel / 2"]
        )
        
        q3 = st.radio(
            "3. ูุชู ูุณุชุฎุฏู ุนุชุจุฉ Otsu?",
            ["ุนูุฏูุง ูุนุฑู ูููุฉ ุงูุนุชุจุฉ ุงููุซูู", "ุนูุฏูุง ูุฑูุฏ ุชุญุฏูุฏ ุงูุนุชุจุฉ ุชููุงุฆูุงู", "ูุชุญุณูู ุงูุฃููุงู", "ูุฒูุงุฏุฉ ุงูุณุทูุน"]
        )
        
        if st.button("โ ุงูุชุญูู ูู ุงูุฅุฌุงุจุงุช"):
            score = 0
            if q1 == "ุชุฌุนู ุงูุตูุฑุฉ ุฃูุชุญ":
                score += 1
                st.success("ุงูุณุคุงู 1: ุตุญูุญ! ุฒูุงุฏุฉ ุงูุณุทูุน ุชุฌุนู ุงูุตูุฑุฉ ุฃูุชุญ")
            else:
                st.error("ุงูุณุคุงู 1: ุฎุทุฃ! ุฒูุงุฏุฉ ุงูุณุทูุน ุชุฌุนู ุงูุตูุฑุฉ ุฃูุชุญ")
            
            if q2 == "255 - pixel":
                score += 1
                st.success("ุงูุณุคุงู 2: ุตุญูุญ! ุงูุตูุฑุฉ ุงูุณุงูุจุฉ = 255 - pixel")
            else:
                st.error("ุงูุณุคุงู 2: ุฎุทุฃ! ุงูุตูุบุฉ ุงูุตุญูุญุฉ ูู 255 - pixel")
            
            if q3 == "ุนูุฏูุง ูุฑูุฏ ุชุญุฏูุฏ ุงูุนุชุจุฉ ุชููุงุฆูุงู":
                score += 1
                st.success("ุงูุณุคุงู 3: ุตุญูุญ! Otsu ูุญุฏุฏ ุงูุนุชุจุฉ ุงููุซูู ุชููุงุฆูุงู")
            else:
                st.error("ุงูุณุคุงู 3: ุฎุทุฃ! Otsu ูุณุชุฎุฏู ูุชุญุฏูุฏ ุงูุนุชุจุฉ ุชููุงุฆูุงู")
            
            st.info(f"**ุงููุชูุฌุฉ: {score}/3**")
            
            if score == 3:
                st.balloons()
                st.session_state.quiz_score = st.session_state.get('quiz_score', 0) + 3

def create_sample_grayscale_image():
    """ุฅูุดุงุก ุตูุฑุฉ ุฑูุงุฏูุฉ ุงูุชุฑุงุถูุฉ"""
    image = np.zeros((300, 400), dtype=np.uint8)
    
    # ุฅุถุงูุฉ ุชุฏุฑุฌ ุฑูุงุฏู
    for i in range(400):
        intensity = int(255 * i / 400)
        image[:, i] = intensity
    
    # ุฅุถุงูุฉ ุฃุดูุงู ุจุฃููุงู ูุฎุชููุฉ
    cv2.rectangle(image, (50, 50), (150, 150), 100, -1)
    cv2.circle(image, (300, 100), 50, 200, -1)
    cv2.line(image, (200, 50), (250, 200), 150, 3)
    
    # ุฅุถุงูุฉ ูุต
    font = cv2.FONT_HERSHEY_SIMPLEX
    cv2.putText(image, 'Grayscale', (100, 250), font, 1, 255, 2, cv2.LINE_AA)
    
    return image

def apply_gamma_correction(image, gamma):
    """ุชุทุจูู Gamma Correction ุนูู ุงูุตูุฑุฉ"""
    # ุจูุงุก lookup table
    inv_gamma = 1.0 / gamma
    table = np.array([((i / 255.0) ** inv_gamma) * 255 for i in np.arange(0, 256)]).astype("uint8")
    
    # ุชุทุจูู gamma correction
    return cv2.LUT(image, table)